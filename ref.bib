@article{Ritchie:1993:DCL:155360.155580,
 author = {Ritchie, Dennis M.},
 title = {The Development of the C Language},
 journal = {SIGPLAN Not.},
 issue_date = {March 1993},
 volume = {28},
 number = {3},
 month = mar,
 year = {1993},
 issn = {0362-1340},
 pages = {201--208},
 numpages = {8},
 url = {http://doi.acm.org.libproxy.york.ac.uk/10.1145/155360.155580},
 doi = {10.1145/155360.155580},
 acmid = {155580},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{cardelli1996type,
  title={Type systems},
  author={Cardelli, Luca},
  year={1996}
}

@article{Terei:2012:SH:2430532.2364524,
 author = {Terei, David and Marlow, Simon and Peyton Jones, Simon and Mazi\`{e}res, David},
 title = {Safe Haskell},
 journal = {SIGPLAN Not.},
 issue_date = {December 2012},
 volume = {47},
 number = {12},
 month = sep,
 year = {2012},
 issn = {0362-1340},
 pages = {137--148},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2430532.2364524},
 doi = {10.1145/2430532.2364524},
 acmid = {2364524},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {haskell, security, type safety},
} 

@article{Harper:1993:FDL:138027.138060,
 author = {Harper, Robert and Honsell, Furio and Plotkin, Gordon},
 title = {A Framework for Defining Logics},
 journal = {J. ACM},
 issue_date = {Jan. 1993},
 volume = {40},
 number = {1},
 month = jan,
 year = {1993},
 issn = {0004-5411},
 pages = {143--184},
 numpages = {42},
 url = {http://doi.acm.org/10.1145/138027.138060},
 doi = {10.1145/138027.138060},
 acmid = {138060},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {formal systems, interactive theorem proving, proof checking, typed lambda calculus},
} 

@article{Bentley:1986:PPL:6424.315691,
 author = {Bentley, Jon},
 title = {Programming Pearls: Little Languages},
 journal = {Commun. ACM},
 issue_date = {Aug. 1986},
 volume = {29},
 number = {8},
 month = aug,
 year = {1986},
 issn = {0001-0782},
 pages = {711--721},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/6424.315691},
 doi = {10.1145/6424.315691},
 acmid = {315691},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{van2000domain,
  title={Domain-specific languages: An annotated bibliography},
  author={Van Deursen, Arie and Klint, Paul and Visser, Joost},
  journal={ACM Sigplan Notices},
  volume={35},
  number={6},
  pages={26--36},
  year={2000},
  publisher={ACM}
}

@book{ranta2012implementing,
  title={Implementing programming languages. An introduction to compilers and interpreters},
  author={Ranta, Aarne},
  year={2012},
  publisher={College Publications}
}

@article{grimm2007typical,
  title={Typical: Taking the tedium out of typing},
  author={Grimm, Robert and Harris, Laune and Le, Anh},
  journal={Presentation at the IBM Programming Languages Day},
  year={2007}
}

@InProceedings{ruler:10.1007/11737414_4,
author="Dijkstra, Atze
and Swierstra, S. Doaitse",
editor="Hagiya, Masami
and Wadler, Philip",
title="Ruler: Programming Type Rules",
booktitle="Functional and Logic Programming",
year="2006",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="30--46",
abstract="Some type systems are first described formally, to be sometimes followed by an implementation. Other type systems are first implemented as language extensions, to be sometimes retrofitted with a formal description. In neither case it is an easy task to keep both artefacts consistent. In this paper we introduce Ruler, a domain specific language for describing type rules. Type rules can be incrementally described, thus providing a means for building complex type systems on top of simpler ones. Besides checking well-formedness of Ruler programs we use them to generate (1) a visual LATEX rendering, suitable for use in the presentation of formal aspects, and (2) an attribute grammar based implementation. Combining these two aspects in Ruler contributes to bridging the gap between theory and practice: mutually consistent representations can be generated for use in both theoretical and practical settings.",
isbn="978-3-540-33439-2"
}


